---
- name: Install WP + ELK
  hosts: VBOX
  become: true
  vars:
    document_root: "/var/www/"
    vhost_name: "test"
    app_user: "www-data"
    sites_aval: "/etc/nginx/sites-available/"
    sites_enable: "/etc/nginx/sites-enabled/"
    php_version: "7.4"
    db_user_password: "123456"

  tasks:
      
    - name: Add php repository
      ansible.builtin.apt_repository:
        repo: "ppa:ondrej/php"

    - name: Install Nginx/MySQL/Php
      ansible.builtin.apt:
        name:
          - nginx
          - php{{ php_version }}-fpm
          - php{{ php_version }}
          - php{{ php_version }}-cli
          - php{{ php_version }}-fpm
          - php{{ php_version }}-mysql
          - php{{ php_version }}-opcache
          - php{{ php_version }}-mbstring
          - php{{ php_version }}-xml
          - php{{ php_version }}-gd
          - php{{ php_version }}-curl
          - mysql-server
          - python3-pip
        state: present
        update_cache: true
      notify: Restart_NGINX

    - name: Create vhost directory
      ansible.builtin.file:
        path: "{{ document_root }}{{ vhost_name }}"
        state: directory

    - name: Copy NGINX config for new Vhost
      ansible.builtin.template:
        src: templates/vhost_wp.conf.j2
        dest: "{{ sites_aval }}{{ vhost_name }}"

    - name: Activate new Vhost
      ansible.builtin.file:
        src: "{{ sites_aval }}{{ vhost_name }}"
        dest: "{{ sites_enable }}{{ vhost_name }}"
        state: link
      notify: Restart_NGINX

    - name: Install MySQL module requirements
      ansible.builtin.pip:
        name:
          - PyMySQL
          - pip
        state: latest

    - name: Create a new database
      community.mysql.mysql_db:
        name: "{{ vhost_name }}"
        state: present
        login_unix_socket: /run/mysqld/mysqld.sock

    # - name: Copy database to remout server
    #   ansible.builtin.copy:
    #     src: "files/onstyle.sql"
    #     dest: "/tmp/onstyle.sql"

    # - name: Restore database from dump
    #   community.mysql.mysql_db:
    #     name:
    #       - xz
    #     state: import
    #     target: "/tmp/onstyle.sql"
    #     login_unix_socket: /run/mysqld/mysqld.sock
    #   run_once: true

    - name: Create database user
      community.mysql.mysql_user:
        name: "{{ vhost_name }}"
        password: "{{ db_user_password }}"
        priv: '{{ vhost_name }}.*:ALL'
        state: present
        login_unix_socket: /run/mysqld/mysqld.sock

    - name: Clone wp files from git
      ansible.builtin.git:
        repo: "https://github.com/WordPress/WordPress.git"
        dest: "{{ document_root }}{{ vhost_name }}"
      notify: Change_owner

    - name: Copy wp-config.php to site directory
      ansible.builtin.template:
        src: "templates/wp-config.php.j2"
        dest: "{{ document_root }}{{ vhost_name }}/wp-config.php"
      notify: Restart_NGINX

  handlers:
    - name: Restart_NGINX
      ansible.builtin.service:
        name: nginx
        state: restarted

    - name: Change_owner
      ansible.builtin.file:
        dest: "{{ document_root }}{{ vhost_name }}"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        recurse: true
      notify: Restart_NGINX